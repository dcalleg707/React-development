[{"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\index.js":"1","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\reportWebVitals.js":"2","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\App.js":"3","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MenuComponent.js":"4","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\dishes.js":"5","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\DishdetailComponent.js":"6","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MainComponent.js":"7","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HeaderComponent.js":"8","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\FooterComponent.js":"9","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HomeComponent.js":"10","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\ContactComponent.js":"11","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\leaders.js":"12","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\comments.js":"13","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\promotions.js":"14","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\AboutComponent.js":"15","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\configureStore.js":"16","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\promotions.js":"17","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\dishes.js":"18","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\comments.js":"19","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\leaders.js":"20","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionTypes.js":"21","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionCreators.js":"22","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\LoadingComponent.js":"23","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\forms.js":"24"},{"size":643,"mtime":1609693267265,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":542,"mtime":1610909109393,"results":"28","hashOfConfig":"26"},{"size":1976,"mtime":1611277197452,"results":"29","hashOfConfig":"26"},{"size":1490,"mtime":1609712264979,"results":"30","hashOfConfig":"26"},{"size":7629,"mtime":1611276738084,"results":"31","hashOfConfig":"26"},{"size":2684,"mtime":1611359224194,"results":"32","hashOfConfig":"26"},{"size":5542,"mtime":1611277301275,"results":"33","hashOfConfig":"26"},{"size":2633,"mtime":1609703623012,"results":"34","hashOfConfig":"26"},{"size":1512,"mtime":1611276390669,"results":"35","hashOfConfig":"26"},{"size":10043,"mtime":1611359422455,"results":"36","hashOfConfig":"26"},{"size":2382,"mtime":1609712351320,"results":"37","hashOfConfig":"26"},{"size":4280,"mtime":1609712327098,"results":"38","hashOfConfig":"26"},{"size":445,"mtime":1609712340914,"results":"39","hashOfConfig":"26"},{"size":4306,"mtime":1609723136039,"results":"40","hashOfConfig":"26"},{"size":819,"mtime":1611359144251,"results":"41","hashOfConfig":"26"},{"size":192,"mtime":1611187000675,"results":"42","hashOfConfig":"26"},{"size":598,"mtime":1611277128772,"results":"43","hashOfConfig":"26"},{"size":454,"mtime":1611189120802,"results":"44","hashOfConfig":"26"},{"size":180,"mtime":1611187029178,"results":"45","hashOfConfig":"26"},{"size":180,"mtime":1611276815261,"results":"46","hashOfConfig":"26"},{"size":784,"mtime":1611358712514,"results":"47","hashOfConfig":"26"},{"size":276,"mtime":1611277151245,"results":"48","hashOfConfig":"26"},{"size":168,"mtime":1611358423034,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"c79b56",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"52"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\index.js",[],["102","103"],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\reportWebVitals.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\App.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MenuComponent.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\dishes.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\DishdetailComponent.js",["104","105","106","107"],"import React, { Component } from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, BreadcrumbItem, Breadcrumb } from 'reactstrap';\r\nimport { Button, Modal, ModalBody, ModalHeader, FormGroup, Label} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\nimport Loading from './LoadingComponent'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\n\r\n\r\nclass CommentForm  extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false,\r\n            dish: props.dish\r\n        };\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n    \r\n\r\n    handleSubmit(values){\r\n        if(values.rating == undefined){\r\n            alert(\"You must choose a rating\");\r\n        }\r\n        else{\r\n            this.toggleModal();\r\n            this.props.addComment(this.props.dishId, values.rating, values.name, values.comment)\r\n        }\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Button outline onClick={this.toggleModal}>\r\n                <span className=\"fa fa-lg\"></span> Comment\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                        <ModalHeader>Submit Comment</ModalHeader>\r\n                        <ModalBody>\r\n                            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"rating\"\r\n                                        innerRef={(input) => this.rating = input} className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"name\">Name</Label>\r\n                                    <Control.text model=\".name\" id='name' name='name'\r\n                                    innerRef={(input) => this.name = input} className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                    <Errors \r\n                                    className=\"text-danger\"\r\n                                    model=\".name\" \r\n                                    show=\"touched\"\r\n                                    messages={{\r\n                                        required: 'Required',\r\n                                        minLength: 'Must be greater than 2 characters',\r\n                                        maxLength: 'Must be 15 characters or less',\r\n                                    }}></Errors>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label htmlFor=\"comment\">Comment</Label>\r\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\r\n                                            rows=\"6\" \r\n                                            className=\"form-control\" innerRef={(input) => this.comment = input}\r\n                                            validators={{\r\n                                                required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                            }} />\r\n                                        <Errors \r\n                                        className=\"text-danger\"\r\n                                        model=\".comment\" \r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less',\r\n                                        }}></Errors>\r\n                                </FormGroup>\r\n                                <Button type='submit' value='submit' className=\"bg-primary\">Submit</Button>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction RenderDish({dish}){\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <Card>\r\n                <CardImg width=\"100%\" src={dish.image} alt={dish.name}/>\r\n                <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                </CardBody>\r\n            </Card>\r\n        </div>\r\n    );  \r\n}\r\n\r\nconst RenderComents = ({comments, addComment, dishId}) => {\r\n    const coms = comments.map((comment) => {\r\n        return(\r\n            <div key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>-- {comment.author}, { new Intl.DateTimeFormat('en-US', {year: 'numeric', month:'short', day:'2-digit'}).format(new Date( Date.parse(comment.date)))}</p>\r\n            </div>)\r\n    });\r\n    return(\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h2>Comments</h2>\r\n            {coms}\r\n            <CommentForm dishId={dishId} addComment={addComment}/> \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    const dish = props.dish;\r\n\r\n    if (props.isLoading){\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Loading />\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else if (props.errMess){\r\n        return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <h4>{props.errMess}</h4>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n    else if(dish != null){   \r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem Active>\r\n                            {dish.name}\r\n                        </BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{dish.name}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={dish}/>\r\n                    <RenderComents comments={props.comments}\r\n                    addComment={props.addComment}\r\n                    dishId={props.dish.id}/>\r\n                </div>\r\n            </div>  \r\n        );\r\n    }\r\n    else{\r\n        return(<div></div>);\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MainComponent.js",["108"],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HeaderComponent.js",["109"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\nButton, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\"> \r\n                    <div className=\"container\"> \r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41 alt=Ristorante Con Fusion\"></img>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa lg\"></span> Contact us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"Container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses! </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type='text' id='username' name='username'\r\n                                 innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type='password' id='password' name='password'\r\n                                 innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type='checkbox' id='remember' name='remember'\r\n                                     innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type='submit' value='submit' className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\FooterComponent.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HomeComponent.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\ContactComponent.js",["110","111","112","113","114","115","116","117","118"],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\leaders.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\comments.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\promotions.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\AboutComponent.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\configureStore.js",["119"],"import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport { Component } from 'react'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport {InitialFeedback} from './forms'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\promotions.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\dishes.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\comments.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\leaders.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionTypes.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionCreators.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\components\\LoadingComponent.js",[],"C:\\Users\\PERSONAL\\OneDrive\\Documentos\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\forms.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":33,"column":26,"nodeType":"126","messageId":"127","endLine":33,"endColumn":28},{"ruleId":"128","severity":1,"message":"129","line":55,"column":37,"nodeType":"130","endLine":56,"endColumn":108},{"ruleId":"128","severity":1,"message":"131","line":66,"column":37,"nodeType":"130","endLine":70,"endColumn":42},{"ruleId":"128","severity":1,"message":"132","line":83,"column":37,"nodeType":"130","endLine":88,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":33,"column":3,"nodeType":"135","messageId":"136","endLine":35,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":44,"column":29,"nodeType":"130","endLine":44,"endColumn":112},{"ruleId":"139","severity":1,"message":"140","line":4,"column":34,"nodeType":"141","messageId":"142","endLine":4,"endColumn":41},{"ruleId":"143","severity":1,"message":"144","line":64,"column":25,"nodeType":"130","endLine":64,"endColumn":67},{"ruleId":"128","severity":1,"message":"131","line":79,"column":33,"nodeType":"130","endLine":84,"endColumn":42},{"ruleId":"128","severity":1,"message":"131","line":99,"column":33,"nodeType":"130","endLine":104,"endColumn":42},{"ruleId":"128","severity":1,"message":"131","line":119,"column":33,"nodeType":"130","endLine":124,"endColumn":42},{"ruleId":"128","severity":1,"message":"131","line":140,"column":33,"nodeType":"130","endLine":145,"endColumn":42},{"ruleId":"128","severity":1,"message":"145","line":160,"column":41,"nodeType":"130","endLine":162,"endColumn":75},{"ruleId":"128","severity":1,"message":"129","line":168,"column":33,"nodeType":"130","endLine":169,"endColumn":62},{"ruleId":"128","severity":1,"message":"132","line":178,"column":33,"nodeType":"130","endLine":180,"endColumn":63},{"ruleId":"139","severity":1,"message":"146","line":7,"column":10,"nodeType":"141","messageId":"142","endLine":7,"endColumn":19},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'actions' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]