[{"D:\\TYB\\repos\\reactCourse\\confusion\\src\\index.js":"1","D:\\TYB\\repos\\reactCourse\\confusion\\src\\reportWebVitals.js":"2","D:\\TYB\\repos\\reactCourse\\confusion\\src\\App.js":"3","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\configureStore.js":"4","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MainComponent.js":"5","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\comments.js":"6","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\dishes.js":"7","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HomeComponent.js":"8","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\leaders.js":"9","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\promotions.js":"10","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\forms.js":"11","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\DishdetailComponent.js":"12","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\FooterComponent.js":"13","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionCreators.js":"14","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MenuComponent.js":"15","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\AboutComponent.js":"16","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HeaderComponent.js":"17","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\ContactComponent.js":"18","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionTypes.js":"19","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\LoadingComponent.js":"20","D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\comments.js":"21","D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\promotions.js":"22","D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\dishes.js":"23","D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\leaders.js":"24","D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\baseUrl.js":"25"},{"size":643,"mtime":1609693267265,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"28","hashOfConfig":"27"},{"size":542,"mtime":1610909109393,"results":"29","hashOfConfig":"27"},{"size":819,"mtime":1611359144251,"results":"30","hashOfConfig":"27"},{"size":3072,"mtime":1611535699929,"results":"31","hashOfConfig":"27"},{"size":645,"mtime":1611536000525,"results":"32","hashOfConfig":"27"},{"size":598,"mtime":1611277128772,"results":"33","hashOfConfig":"27"},{"size":1705,"mtime":1611520081857,"results":"34","hashOfConfig":"27"},{"size":180,"mtime":1611187029178,"results":"35","hashOfConfig":"27"},{"size":637,"mtime":1611445111281,"results":"36","hashOfConfig":"27"},{"size":168,"mtime":1611358423034,"results":"37","hashOfConfig":"27"},{"size":7688,"mtime":1611535702558,"results":"38","hashOfConfig":"27"},{"size":2633,"mtime":1609703623012,"results":"39","hashOfConfig":"27"},{"size":4308,"mtime":1611535709305,"results":"40","hashOfConfig":"27"},{"size":2030,"mtime":1611445581079,"results":"41","hashOfConfig":"27"},{"size":4306,"mtime":1609723136039,"results":"42","hashOfConfig":"27"},{"size":5542,"mtime":1611277301275,"results":"43","hashOfConfig":"27"},{"size":10043,"mtime":1611359422455,"results":"44","hashOfConfig":"27"},{"size":415,"mtime":1611443987091,"results":"45","hashOfConfig":"27"},{"size":276,"mtime":1611277151245,"results":"46","hashOfConfig":"27"},{"size":4280,"mtime":1609712327098,"results":"47","hashOfConfig":"27"},{"size":445,"mtime":1609712340914,"results":"48","hashOfConfig":"27"},{"size":1490,"mtime":1609712264979,"results":"49","hashOfConfig":"27"},{"size":2382,"mtime":1609712351320,"results":"50","hashOfConfig":"27"},{"size":50,"mtime":1611444112529,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"11c3uy",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"D:\\TYB\\repos\\reactCourse\\confusion\\src\\index.js",[],["106","107"],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\reportWebVitals.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\App.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\configureStore.js",["108"],"import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport { createForms } from 'react-redux-form'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport { Component } from 'react'\r\nimport thunk from 'redux-thunk'\r\nimport logger from 'redux-logger'\r\nimport {InitialFeedback} from './forms'\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n}","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MainComponent.js",["109"],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\comments.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\dishes.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HomeComponent.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\leaders.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\promotions.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\forms.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\DishdetailComponent.js",["110","111","112","113"],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\FooterComponent.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionCreators.js",["114"],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\MenuComponent.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\AboutComponent.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\HeaderComponent.js",["115"],"import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\nButton, Modal, ModalBody, ModalHeader, Form, FormGroup, Label, Input} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleLogin(event){\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <Navbar dark expand=\"md\"> \r\n                    <div className=\"container\"> \r\n                        <NavbarToggler onClick={this.toggleNav}/>\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                            <img src=\"assets/images/logo.png\" height=\"30\" width=\"41 alt=Ristorante Con Fusion\"></img>\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/home\">\r\n                                        <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                        <span className=\"fa fa-info fa-lg\"></span> About us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                        <span className=\"fa fa-list fa lg\"></span> Menu\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                        <span className=\"fa fa-address-card fa lg\"></span> Contact us\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <NavItem>\r\n                                    <Button outline onClick={this.toggleModal}>\r\n                                        <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                                    </Button>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"Container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses! </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type='text' id='username' name='username'\r\n                                 innerRef={(input) => this.username = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type='password' id='password' name='password'\r\n                                 innerRef={(input) => this.password = input}/>\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type='checkbox' id='remember' name='remember'\r\n                                     innerRef={(input) => this.remember = input}/>\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type='submit' value='submit' className=\"bg-primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\ContactComponent.js",["116","117","118","119","120","121","122","123","124"],"import React, { Component } from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form , Errors, actions } from 'react-redux-form'\r\n\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => (val) && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\n\r\nclass Contact extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.handleSubmit = this.handleSubmit.bind(this);            \r\n        }\r\n    \r\n        handleSubmit(values) {\r\n            console.log('Current State is: ' + JSON.stringify(values));\r\n            alert('Current State is: ' + JSON.stringify(values));\r\n            this.props.resetFeedbackForm();\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to='/home'>Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem Active>\r\n                        Contact us\r\n                    </BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12\">\r\n                    <h3>Contact us</h3>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                <h3>Location Information</h3>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                        121, Clear Water Bay Road<br />\r\n                        Clear Water Bay, Kowloon<br />\r\n                        HONG KONG<br />\r\n                        <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                        <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                        <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                    <h5>Map of our Location</h5>\r\n                </div>\r\n                <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                        <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                        <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h3>Send us your Feedback</h3>\r\n                </div>\r\n                <div className=\"col-12 col-md-9\">\r\n                    <Form model =\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                    placeholder=\"First Name\"\r\n                                    className=\"form-control\" \r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".firstname\" \r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less'\r\n                                }}></Errors>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                    placeholder=\"Last Name\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".lastname\" \r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 characters',\r\n                                    maxLength: 'Must be 15 characters or less',\r\n                                }}></Errors>\r\n                            </Col>                        \r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                        <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                    placeholder=\"Tel. number\"\r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                    }} />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".telnum\" \r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    minLength: 'Must be greater than 2 numbers',\r\n                                    maxLength: 'Must be 15 numbers or less',\r\n                                    isNumber: 'Must be a number'\r\n                                }}></Errors>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                            <Col md={10}>\r\n                                <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                    placeholder=\"Email\" \r\n                                    className=\"form-control\"\r\n                                    validators={{\r\n                                        required, validEmail\r\n                                    }} />\r\n                                <Errors \r\n                                className=\"text-danger\"\r\n                                model=\".email\" \r\n                                show=\"touched\"\r\n                                messages={{\r\n                                    required: 'Required',\r\n                                    validEmail: 'Invalid Email'\r\n                                }}></Errors>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 6, offset: 2}}>\r\n                                <div className=\"form-check\">\r\n                                    <Label check>\r\n                                        <Control.checkbox model=\".agree\"\r\n                                            name=\"agree\"\r\n                                            className=\"form-check-input\"/> {' '}\r\n                                        <strong>May we contact you?</strong>\r\n                                    </Label>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={{size: 3, offset: 1}}>\r\n                                <Control.select model=\".contactType\" name=\"contactType\"\r\n                                    className=\"form-control\">\r\n                                    <option>Tel.</option>\r\n                                    <option>Email</option>\r\n                                </Control.select>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                            <Col md={10}>\r\n                                <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                    rows=\"12\" \r\n                                    className=\"form-control\"/>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"form-group\">\r\n                            <Col md={{size: 10, offset: 2}}>\r\n                                <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\nexport default Contact;","D:\\TYB\\repos\\reactCourse\\confusion\\src\\redux\\ActionTypes.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\components\\LoadingComponent.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\comments.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\promotions.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\dishes.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\leaders.js",[],"D:\\TYB\\repos\\reactCourse\\confusion\\src\\shared\\baseUrl.js",[],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":7,"column":10,"nodeType":"131","messageId":"132","endLine":7,"endColumn":19},{"ruleId":"133","severity":1,"message":"134","line":36,"column":3,"nodeType":"135","messageId":"136","endLine":38,"endColumn":4},{"ruleId":"137","severity":1,"message":"138","line":34,"column":26,"nodeType":"139","messageId":"140","endLine":34,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":56,"column":37,"nodeType":"143","endLine":57,"endColumn":108},{"ruleId":"141","severity":1,"message":"144","line":67,"column":37,"nodeType":"143","endLine":71,"endColumn":42},{"ruleId":"141","severity":1,"message":"145","line":84,"column":37,"nodeType":"143","endLine":89,"endColumn":50},{"ruleId":"129","severity":1,"message":"146","line":2,"column":10,"nodeType":"131","messageId":"132","endLine":2,"endColumn":16},{"ruleId":"147","severity":1,"message":"148","line":44,"column":29,"nodeType":"143","endLine":44,"endColumn":112},{"ruleId":"129","severity":1,"message":"149","line":4,"column":34,"nodeType":"131","messageId":"132","endLine":4,"endColumn":41},{"ruleId":"150","severity":1,"message":"151","line":64,"column":25,"nodeType":"143","endLine":64,"endColumn":67},{"ruleId":"141","severity":1,"message":"144","line":79,"column":33,"nodeType":"143","endLine":84,"endColumn":42},{"ruleId":"141","severity":1,"message":"144","line":99,"column":33,"nodeType":"143","endLine":104,"endColumn":42},{"ruleId":"141","severity":1,"message":"144","line":119,"column":33,"nodeType":"143","endLine":124,"endColumn":42},{"ruleId":"141","severity":1,"message":"144","line":140,"column":33,"nodeType":"143","endLine":145,"endColumn":42},{"ruleId":"141","severity":1,"message":"152","line":160,"column":41,"nodeType":"143","endLine":162,"endColumn":75},{"ruleId":"141","severity":1,"message":"142","line":168,"column":33,"nodeType":"143","endLine":169,"endColumn":62},{"ruleId":"141","severity":1,"message":"145","line":178,"column":33,"nodeType":"143","endLine":180,"endColumn":63},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'DISHES' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]